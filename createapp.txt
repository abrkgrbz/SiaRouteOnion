var KTUsersAddUser = function () {
    const t = document.getElementById("kt_modal_add_user"),
        e = t.querySelector("#kt_modal_add_user_form"),
        n = new bootstrap.Modal(t);
    return {
        init: function () {
            (() => {
                var o = FormValidation.formValidation(e, {
                    fields: {
                        ProjectName: {
                            validators: {
                                notEmpty: {
                                    message: "Proje Adý Zorunludur"
                                }
                            }
                        },
                        ProjectStatus: {
                            validators: {
                                notEmpty: {
                                    message: "Proje Durumu Zorunludur"
                                }
                            }
                        } 
                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger,
                        bootstrap: new FormValidation.plugins.Bootstrap5({
                            rowSelector: ".fv-row",
                            eleInvalidClass: "",
                            eleValidClass: ""
                        })
                    }
                });
                const i = t.querySelector('[data-kt-users-modal-action="submit"]');
                i.addEventListener("click", (t => {
                    t.preventDefault(), o && o.validate().then((function (t) {
                        console.log("validated!"), "Valid" == t ? (i.setAttribute("data-kt-indicator", "on"), i.disabled = !0,
                            setTimeout((function () { 
                                ajaxPost();
                                i
                            }))) : Swal.fire({
                                text: "Lütfen zorunlu alanlarý doldurunuz!",
                                icon: "error",
                                buttonsStyling: !1,
                                confirmButtonText: "Tamam!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            })
                    }))
                })), t.querySelector('[data-kt-users-modal-action="cancel"]').addEventListener("click", (t => {
                    t.preventDefault(), Swal.fire({
                        text: "Formu Ýptal Etmek Ýstiyormusunuz?",
                        icon: "warning",
                        showCancelButton: !0,
                        buttonsStyling: !1,
                        confirmButtonText: "Evet!",
                        cancelButtonText: "Hayýr",
                        customClass: {
                            confirmButton: "btn btn-primary",
                            cancelButton: "btn btn-active-light"
                        }
                    }).then((function (t) {
                        t.value ? (e.reset(), n.hide()) : "cancel" === t.dismiss && Swal.fire({
                            text: "Form Ýptal Edildi.",
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Tamam!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        })
                    }))
                })), t.querySelector('[data-kt-users-modal-action="close"]').addEventListener("click", (t => {
                    t.preventDefault(), Swal.fire({
                        text: "Formu Ýptal Etmek Ýstiyormusunuz?",
                        icon: "warning",
                        showCancelButton: !0,
                        buttonsStyling: !1,
                        confirmButtonText: "Evet!",
                        cancelButtonText: "Hayýr",
                        customClass: {
                            confirmButton: "btn btn-primary",
                            cancelButton: "btn btn-active-light"
                        }
                    }).then((function (t) {
                        t.value ? (e.reset(), n.hide()) : "cancel" === t.dismiss && Swal.fire({
                            text: "Form Ýptal Edilmedi!.",
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Tamam!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        })
                    }))
                }))
            })()
        }
    }
}();
KTUtil.onDOMContentLoaded((function () {
    KTUsersAddUser.init()
}));

function ajaxPost() {
    $.ajax({
        url: 'project-list/proje-olustur',
        type: 'POST',
        dataType: 'json',
        cache: false,
        data: new FormData(document.getElementById("kt_modal_add_user_form")),
        processData: false,
        contentType: false,
        success: function (data) {
            console.log(data)
            if (data== true) {
                Swal.fire({
                    text: "Proje baþarýyla oluþturuldu",
                    icon: "success",
                    buttonsStyling: !1,
                    confirmButtonText: "Tamam",
                    customClass: {
                        confirmButton: "btn btn-primary"
                    }
                }).then((function (t) {
                    location.reload(true)
                    t.isConfirmed && n.hide()
                }))
            } else {
                Swal.fire({
                    text:"Proje oluþturma iþlemi baþarýsýz",
                    icon: "error",
                    buttonsStyling: !1,
                    confirmButtonText: "Tamam",
                    customClass: {
                        confirmButton: "btn btn-primary"
                    }
                }).then((function (t) {
                    location.reload(true)
                    t.isConfirmed && n.hide()
                }))
            }

        },
        error: function (data) { 
            Swal.fire({
                text: data.responseJSON.Errors,
                icon: "error",
                buttonsStyling: !1,
                confirmButtonText: "Tamam",
                customClass: {
                    confirmButton: "btn btn-primary"
                }
            }).then((function (t) {
                location.reload(true)
                t.isConfirmed && n.hide()
            }))
        }
    });
}