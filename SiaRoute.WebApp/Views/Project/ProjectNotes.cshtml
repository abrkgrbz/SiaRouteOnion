@{
    ViewData["Title"] = "ProjectNotes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css {
    <link href="~/custom/projectNote/projectNote.css" rel="stylesheet" type="text/css" />

}
@{
    Html.RenderPartial("_ProjectDetailPartialView");
}
<div class="modal fade" id="add_project_notes" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <div class="modal-content rounded">
            <div class="modal-header pb-0 border-0 justify-content-end">
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body scroll-y px-10 px-lg-15 pt-0 pb-15">
                <form id="kt_modal_new_target_form" class="form" action="#">
                    <div class="mb-13 text-center">
                        <h1 class="mb-3">Not Oluşturun</h1>
                        <div class="text-muted fw-bold fs-5">
                            Oluşturulan not proje ekibi tarafından görüntülenecektir.
                        </div>
                    </div>

                    <div class="d-flex flex-column mb-8">
                        <textarea class="form-control form-control-solid" rows="6" name="note" placeholder="Lütfen Notunuzu buraya yazınız."></textarea>
                    </div>

                    <div class="text-center">
                        <button type="reset" id="kt_modal_new_target_cancel" class="btn btn-light me-3">Vazgeç</button>
                        <button type="submit" id="kt_modal_new_target_submit" class="btn btn-primary">
                            <span class="indicator-label">Kaydet</span>
                            <span class="indicator-progress">
                                Lütfen Bekleyiniz...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row g-9">
    <div class="col-md-4 col-lg-12 col-xl-4">
        <div class="mb-9" id="notes">
            <div class="d-flex flex-stack">
                <div class="fw-bolder fs-4">
                    Notlar
                    <span class="fs-6 text-gray-400 ms-2">2</span>
                </div>
            </div>
            <div class="h-3px w-100 bg-warning"></div>
        </div>
        <div class="scrollable-container">
            <div class="card mb-6 mb-xl-9">
                <div class="card-body">
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-12 col-xl-4">
        <div class="mb-9" id="tk">
            <div class="d-flex flex-stack">
                <div class="fw-bolder fs-4">
                    TK Soruları
                    <span class="fs-6 text-gray-400 ms-2">2</span>
                </div>

            </div>
            <div class="h-3px w-100 bg-info"></div>
        </div>
        <div class="scrollable-container">
            <div class="card mb-6 mb-xl-9">
                <div class="card-body">
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-4 col-lg-12 col-xl-4">
        <div class="mb-9" id="data">
            <div class="d-flex flex-stack">
                <div class="fw-bolder fs-4">
                    Data Kontrol Soruları
                    <span class="fs-6 text-gray-400 ms-2">2</span>
                </div>

            </div>
            <div class="h-3px w-100 bg-danger"></div>
        </div>
        <div class="scrollable-container">
            <div class="card mb-6 mb-xl-9">
                <div class="card-body">
                </div>
            </div>
        </div>

    </div>

</div>

<div class="modal fade" id="add_project_add_tk" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <div class="modal-content rounded">
            <div class="modal-header pb-0 border-0 justify-content-end">
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body scroll-y px-10 px-lg-15 pt-0 pb-15">
                <form id="kt_modal_new_target_form_tk" class="form" action="#">
                    <div class="mb-13 text-center">
                        <h1 class="mb-3">TK Soruları Oluşturun</h1>
                        <div class="text-muted fw-bold fs-5">
                            Oluşturulan TK Soruları proje ekibi tarafından görüntülenecektir.
                        </div>
                    </div>

                    <div class="d-flex flex-column mb-8">
                        <textarea class="form-control form-control-solid" rows="6" name="note_tk" placeholder="Lütfen TK Sorularını buraya yazınız."></textarea>
                    </div>

                    <div class="text-center">
                        <button type="reset" id="kt_modal_tk_new_target_cancel_tk" class="btn btn-light me-3">Vazgeç</button>
                        <button type="submit" id="kt_modal_tk_new_target_submit_tk" class="btn btn-primary">
                            <span class="indicator-label">Kaydet</span>
                            <span class="indicator-progress">
                                Lütfen Bekleyiniz...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="add_project_add_dks" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <div class="modal-content rounded">
            <div class="modal-header pb-0 border-0 justify-content-end">
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body scroll-y px-10 px-lg-15 pt-0 pb-15">
                <form id="kt_modal_new_target_form_dks" class="form" action="#">
                    <div class="mb-13 text-center">
                        <h1 class="mb-3">Data Kontrol Soruları Oluşturun</h1>
                        <div class="text-muted fw-bold fs-5">
                            Oluşturulan Data Kontrol Soruları proje ekibi tarafından görüntülenecektir.
                        </div>
                    </div>

                    <div class="d-flex flex-column mb-8">
                        <textarea class="form-control form-control-solid" rows="6" name="note_dks" placeholder="Lütfen Data Kontrol Sorularını buraya yazınız."></textarea>
                    </div>

                    <div class="text-center">
                        <button type="reset" id="kt_modal_dks_new_target_cancel_dks" class="btn btn-light me-3">Vazgeç</button>
                        <button type="submit" id="kt_modal_dks_new_target_submit_dks" class="btn btn-primary">
                            <span class="indicator-label">Kaydet</span>
                            <span class="indicator-progress">
                                Lütfen Bekleyiniz...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section js {
    <script src="https://npmcdn.com/flatpickr/dist/l10n/tr.js"></script>
    <script>
               function fetchAllData() {
                  const urlParams = new URLSearchParams(window.location.search);
                  const projectId = urlParams.get('id');

                  $.ajax({
                    url: '@Url.Action("GetAllProjectNoteByProject","ProjectNote")',
                    method: 'GET',
                    data: { ProjectId: projectId },
                    success: function(response) {
                      console.log('Tüm veriler:', response);

                       if (response.succeeded && response.data) {
                        // NoteType'a göre gruplandırılmış veriyi işleme
                        const groupedData = response.data;

                        // NoteType enum değerlerine göre seçim yapma
                        // Burada enum değerlerini varsayalım: 0 = Notes, 1 = TK, 2 = Data
                        const notes = groupedData['Not'] || [];
                         const tkQuestions = groupedData['TkSorulari'] || [];
                         const dataQuestions = groupedData['DataKontrolSorulari'] || [];

                        // Her kategoriyi ilgili bölüme yerleştir
                        updateSection('notes', notes);
                        updateSection('tk', tkQuestions);
                        updateSection('data', dataQuestions);
                      } else {
                        // Veri formatı uygun değilse hata mesajı göster
                        showErrorInAllSections('Veri formatı beklendiği gibi değil veya veri bulunamadı');
                      }
                    },
                         error: function(xhr, status, error) {
           
           if (xhr.responseJSON) {
             // API'den dönen hata mesajını kullan
             if (xhr.responseJSON.Message) {
               errorMessage = xhr.responseJSON.Message;
             } else if (xhr.responseJSON.Errors && xhr.responseJSON.Errors.length > 0) {
               errorMessage = xhr.responseJSON.Errors.join(', ');
             }
           }

           showErrorInAllSections(errorMessage);
        }
                  });
                }

             // Bölüm içeriğini güncelleme fonksiyonu
        function updateSection(sectionId, items) {
          // İlgili bölümü seç
          const sectionHeader = $(`#${sectionId}`);
          const sectionContainer = sectionHeader.next('.scrollable-container');

          // Eğer scrollable-container yoksa oluşturalım
          if (sectionContainer.length === 0) {
            sectionHeader.after('<div class="scrollable-container"></div>');
            sectionContainer = sectionHeader.next('.scrollable-container');
          }

          // Not sayısını güncelle
          $(`#${sectionId} .fs-6.text-gray-400`).text(items.length);

          // İçeriği temizle
          sectionContainer.empty();

          if (items && items.length > 0) {
            // Her kayıt için kart oluştur ve ekle
            items.forEach(item => {
              const itemDate = new Date(item.created).toLocaleString();
              const content = item.note || "";
              const card = `
                <div class="card mb-6 mb-xl-9">
                  <div class="card-body">
                    
                    <div class="fs-6 fw-bold text-gray-600 mb-5">${escapeHtml(content)}</div>
                    <div class="text-muted fs-7">${itemDate}</div>
                  </div>
                </div>`;
              sectionContainer.append(card);
            });
          } else {
            // Kayıt yoksa bilgi mesajı göster
            const emptyCard = `
              <div class="card mb-6 mb-xl-9">

                <div class="card-body">
                  <div class="fs-6 fw-bold text-gray-600 mb-5">Bu bölüm için oluşturulmuş herhangi bir kayıt yoktur</div>
                </div>
              </div>`;
            sectionContainer.append(emptyCard);
          }
                }
                // Tüm bölümlere hata mesajı gösterme
                function showErrorInAllSections(errorMessage) {
                  ['notes', 'tk', 'data'].forEach(sectionId => {
                    const sectionContainer = $(`#${sectionId}`).parent();
                    const errorCard = `
                      <div class="card mb-6 mb-xl-9">
                        <div class="card-body">
                          <div class="fs-6 fw-bold text-danger mb-5">${errorMessage}</div>
                        </div>
                      </div>`;
                    sectionContainer.find('.card').remove();
                    sectionContainer.append(errorCard);
                  });
                }

                // XSS saldırılarını önlemek için HTML kaçış fonksiyonu
                function escapeHtml(unsafe) {
                  return unsafe
                    .replace(/&/g, "&amp;")
                    .replace(/</g, "&lt;")
                    .replace(/>/g, "&gt;")
                    .replace(/"/g, "&quot;")
                    .replace(/'/g, "&#039;");
                }

                // Sayfa yüklendiğinde tüm verileri çek
                $(document).ready(function() {
                  fetchAllData();
                });
    </script>
    <script>
               $(document).ready(function(){
                        toastr.options = {
            "closeButton": true,
            "debug": true,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toastr-bottom-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
            const urlParams = new URLSearchParams(window.location.search);
            const projectId = urlParams.get('id');
            const noteType=1;
            $('#kt_modal_new_target_form').submit(function(event){
                event.preventDefault(); // Formun standart gönderimini engelle

                var formData = new FormData();
                formData.append('Note', $('textarea[name="note"]').val());
                formData.append('ProjectId', projectId);
                formData.append('NoteType',noteType);
                $.ajax({
                    url: '@Url.Action("AddProjectNote","ProjectNote")',
                    method: 'POST',
                    processData: false,
                    contentType: false,
                    data: formData,
                    beforeSend: function() {
                        $('#kt_modal_new_target_submit .indicator-label').hide();
                        $('#kt_modal_new_target_submit .indicator-progress').show();
                    },
                    success: function(response){
                        console.log(response)
                        toastr.success("Notunuz oluşturuldu");
                        $('#kt_modal_new_target_form')[0].reset();
                          fetchAllData();
                    },
                    error: function(){
                        toastr.error("Notunuz oluşturulamadı");
                    },
                    complete: function() {
                        $('#kt_modal_new_target_submit .indicator-label').show();
                        $('#kt_modal_new_target_submit .indicator-progress').hide();
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function(){
               toastr.options = {
                "closeButton": true,
                "debug": true,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toastr-bottom-center",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
                const urlParams = new URLSearchParams(window.location.search);
                const projectId = urlParams.get('id');
                const noteType=2;
                        $('#kt_modal_new_target_form_tk').submit(function(event){
                    event.preventDefault(); // Formun standart gönderimini engelle

                    var formData = new FormData();
                    formData.append('Note', $('textarea[name="note_tk"]').val());
                    formData.append('ProjectId', projectId);
                    formData.append('NoteType',noteType);
                    $.ajax({
                        url: '@Url.Action("AddProjectNote","ProjectNote")',
                        method: 'POST',
                        processData: false,
                        contentType: false,
                        data: formData,
                        beforeSend: function() {
                            $('#kt_modal_new_target_submit_tk .indicator-label').hide();
                            $('#kt_modal_new_target_submit_tk .indicator-progress').show();
                        },
                        success: function(response){
                            console.log(response)
                            toastr.success("TK Sorusu oluşturuldu");
                            $('#kt_modal_new_target_form_tk')[0].reset();
                                  fetchAllData();
                        },
                        error: function(){
                            toastr.error("Notunuz oluşturulamadı");
                        },
                        complete: function() {
                            $('#kt_modal_new_target_submit_tk .indicator-label').show();
                            $('#kt_modal_new_target_submit_tk .indicator-progress').hide();
                        }
                    });
                });
            });
    </script>
    <script>
        $(document).ready(function(){
               toastr.options = {
                "closeButton": true,
                "debug": true,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toastr-bottom-center",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
                const urlParams = new URLSearchParams(window.location.search);
                const projectId = urlParams.get('id');
                const noteType=3;
                        $('#kt_modal_new_target_form_dks').submit(function(event){
                    event.preventDefault(); // Formun standart gönderimini engelle

                    var formData = new FormData();
                    formData.append('Note', $('textarea[name="note_dks"]').val());
                    formData.append('ProjectId', projectId);
                    formData.append('NoteType',noteType);
                    $.ajax({
                        url: '@Url.Action("AddProjectNote","ProjectNote")',
                        method: 'POST',
                        processData: false,
                        contentType: false,
                        data: formData,
                        beforeSend: function() {
                            $('#kt_modal_new_target_submit_dks .indicator-label').hide();
                            $('#kt_modal_new_target_submit_dks .indicator-progress').show();
                        },
                        success: function(response){
                            console.log(response)
                            toastr.success("Data Kontrol Sorusu oluşturuldu");
                            $('#kt_modal_new_target_form_dks')[0].reset();
                            fetchAllData();
                        },
                        error: function(){
                            toastr.error("Notunuz oluşturulamadı");
                        },
                        complete: function() {
                            $('#kt_modal_new_target_submit_dks .indicator-label').show();
                            $('#kt_modal_new_target_submit_dks .indicator-progress').hide();
                        }
                    });
                });
            });
    </script>
}